package src.view;

import java.awt.event.KeyEvent;
import javax.swing.JDialog;

/**
 * This class will display a JDialog that provides a GUI to allow the user to
 * create a Simple Filter
 * 
 * @author Brenda Medina
 */
public class SimpleFilterCreatorDialog extends javax.swing.JPanel {
    
    /**
     * The JLogger
     */
    private JLogger logger;
    /**
     * The dialog that we're displaying
     */
    private JDialog myDialog;

    /**
     * The constructor sets logger to the passed in argument.  It then calls
     * initComponents() to setup the GUI.  Lastly, it does what is necessary to
     * create and display the JDialog.  
     * 
     * @param log
     */
    public SimpleFilterCreatorDialog(JLogger log) {
        logger = log;
        initComponents();

        //Display the JDialog
        myDialog = new JDialog(logger, "Create Simple Filter", true);
        myDialog.setContentPane(this);
        myDialog.pack();
        //myDialog.setResizable(false);
        myDialog.setLocationRelativeTo(logger);
        myDialog.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeGroup1 = new javax.swing.ButtonGroup();
        typeGroup2 = new javax.swing.ButtonGroup();
        typeGroup3 = new javax.swing.ButtonGroup();
        typeGroup4 = new javax.swing.ButtonGroup();
        typeGroup5 = new javax.swing.ButtonGroup();
        LogicalOperatorGroup = new javax.swing.ButtonGroup();
        filterField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        positiveRadioButton1 = new javax.swing.JRadioButton();
        negativeRadioButton1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        filterField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterField1KeyReleased(evt);
            }
        });

        jLabel1.setText("Filter:");

        jLabel2.setText("Type:");

        typeGroup1.add(positiveRadioButton1);
        positiveRadioButton1.setSelected(true);
        positiveRadioButton1.setText("Positive");

        typeGroup1.add(negativeRadioButton1);
        negativeRadioButton1.setText("Negative");

        jLabel3.setText("Enter The Filter Term:");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(192, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(positiveRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(negativeRadioButton1))
                    .addComponent(filterField1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addGap(0, 0, 0))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(153, Short.MAX_VALUE)
                .addComponent(createButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(filterField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(negativeRadioButton1)
                    .addComponent(positiveRadioButton1))
                .addGap(9, 9, 9)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(createButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

     /**
     * ActionListener for the "Cancel" button.  It simply closes myDialog.
     *
     * @param evt The ActionEvent
     */    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        myDialog.setVisible(false);
        logger.setSearchText("");
        //logger.clearSearchStatusLabel();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * ActionListener for the "Create" button.  If the fiter text is not empty, it creates a simple filter.  It
     * will then close the dialog.  Then it passes the filter term and whether the filter is positive or not
     * to JLogger; by calling its createSimpleFilter method.
     *
     * @param evt The ActionEvent
     */
    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
       String f = filterField1.getText();
       boolean b = positiveRadioButton1.isSelected();
       if(f.trim().compareTo("") == 0){
           return;
       } 
        //Close the dialog
        myDialog.setVisible(false);

       //call cretaeSimpleFilter and give it the filter
       logger.createSimpleFilter(f, b);
    }//GEN-LAST:event_createButtonActionPerformed

    /**
     * Action Listener that allows the user to press enter after typing in the text field to create an Simple filter
     * @param evt
     */
    private void filterField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterField1KeyReleased
       if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            createButton.doClick();
        }
    }//GEN-LAST:event_filterField1KeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup LogicalOperatorGroup;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton createButton;
    private javax.swing.JTextField filterField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton negativeRadioButton1;
    private javax.swing.JRadioButton positiveRadioButton1;
    private javax.swing.ButtonGroup typeGroup1;
    private javax.swing.ButtonGroup typeGroup2;
    private javax.swing.ButtonGroup typeGroup3;
    private javax.swing.ButtonGroup typeGroup4;
    private javax.swing.ButtonGroup typeGroup5;
    // End of variables declaration//GEN-END:variables

}